import { Command } from './command.interface.js';
import { TSVFileReader } from '../../shared/libs/file-reader/tsv-file-reader.js';
import path from 'node:path';
import fs from 'node:fs';

export class ImportCommand implements Command {
  public getName(): string {
    return '--import';
  }

  public async execute(...parameters: string[]): Promise<void> {
    const [filepath] = parameters;

    if (!filepath) {
      console.error('‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.');
      return;
    }

    const fullPath = path.resolve(filepath.trim());

    if (!fs.existsSync(fullPath)) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª ${fullPath} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
      return;
    }

    console.info(`üì• –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞: ${fullPath}`);

    const fileReader = new TSVFileReader(fullPath);

    try {
      await fileReader.read();
      console.info(`‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${fileReader.toArray().length}`);

      console.table(fileReader.toArray().slice(0, 5));
    } catch (err) {
      if (err instanceof Error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: ${err.message}`);
      } else {
        throw err;
      }
    }
  }
}
